<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Laravel on 網站製作學習誌</title>
    <link>https://jaceju.net/tags/laravel/</link>
    <description>Recent content in Laravel on 網站製作學習誌</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 12 Feb 2019 14:27:08 +0800</lastBuildDate>
    
	<atom:link href="https://jaceju.net/tags/laravel/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在 Laravel 專案中整合 Vue CLI</title>
      <link>https://jaceju.net/integrate-vue-cli-into-laravel/</link>
      <pubDate>Tue, 12 Feb 2019 14:27:08 +0800</pubDate>
      
      <guid>https://jaceju.net/integrate-vue-cli-into-laravel/</guid>
      <description>自從 Vue CLI 3 發佈以來，如何將它整合在 Laravel 裡是不少開發者的疑問；因此 Vue 的老爸尤雨溪便針對這個問題寫了一個教學範例 ，本文即是參考該範例所寫，不過有根</description>
    </item>
    
    <item>
      <title>Laravel 執行測試時出現 Function name must be a string</title>
      <link>https://jaceju.net/function-name-must-be-a-string-in-laravel-testing/</link>
      <pubDate>Mon, 28 Jan 2019 12:26:42 +0800</pubDate>
      
      <guid>https://jaceju.net/function-name-must-be-a-string-in-laravel-testing/</guid>
      <description>在 Laravel 撰寫單元測試有用到 @dataProvider ，執行測試時卻出現 Function name must be a string 的錯誤。 這是因為所有的 Data Provider 會比 setUp 更早被執行，所以不能在 Data Provider 裡用任何在 setUp 後才會有的東西，</description>
    </item>
    
    <item>
      <title>在 Laravel 中使用 Behat 來加強測試的可讀性 - 進階篇</title>
      <link>https://jaceju.net/behat-in-laravel-advance/</link>
      <pubDate>Fri, 09 Nov 2018 18:38:53 +0800</pubDate>
      
      <guid>https://jaceju.net/behat-in-laravel-advance/</guid>
      <description>在上一篇文章中，我介紹了如何把 Behat 整合到 Laravel 裡；不過後來我發現在專案規格越來越複雜時，把所有 step definitions 都寫在 FeatureContext 類別中變得非常不易閱讀。另一個問題就是我</description>
    </item>
    
    <item>
      <title>在 Laravel 中使用 Behat 來加強測試的可讀性 - 基礎篇</title>
      <link>https://jaceju.net/behat-in-laravel/</link>
      <pubDate>Thu, 08 Nov 2018 18:30:00 +0800</pubDate>
      
      <guid>https://jaceju.net/behat-in-laravel/</guid>
      <description>Laravel 的測試框架是基於 PHPUnit 上所建立出來的，而在 Laravel 5.5 之後，測試框架的功能也大幅地加強了。只不過在越來越複雜的專案規格下，我個人覺得 PHPUnit 在情境案例的描述</description>
    </item>
    
    <item>
      <title>邁向 PHP 重構之路 - 以 Laravel 程式碼片段為例</title>
      <link>https://jaceju.net/simple-refatoring-example-01/</link>
      <pubDate>Mon, 05 Oct 2015 12:53:48 +0800</pubDate>
      
      <guid>https://jaceju.net/simple-refatoring-example-01/</guid>
      <description>來上 TDD 課的學員問到一個 Laravel 程式碼重構的問題，這裡簡單地做分享。未來如果有好的實戰範例，這系列就會延續下去。 開始重構 當然重構前，我們必須先有測試</description>
    </item>
    
    <item>
      <title>在 Laravel 上用 MailCatcher 發送測試信件</title>
      <link>https://jaceju.net/laravel-mailcatcher/</link>
      <pubDate>Wed, 29 Jul 2015 15:22:29 +0800</pubDate>
      
      <guid>https://jaceju.net/laravel-mailcatcher/</guid>
      <description>雖然 Laravel 在寄送測試信件上提供了 Mailgun 這個服務的串接方式，不過如果能夠在 Homestead 就可以直接測試是更棒的選擇；而 MailCatcher 剛好就提供這樣的功能，它能啟動一個 SMTP 模擬服</description>
    </item>
    
    <item>
      <title>Laravel 5.1 Events Broadcasting 實務練習</title>
      <link>https://jaceju.net/laravel-events-broadcasting/</link>
      <pubDate>Sun, 26 Jul 2015 00:38:37 +0800</pubDate>
      
      <guid>https://jaceju.net/laravel-events-broadcasting/</guid>
      <description>Laravel 5.1 提供了一個非常棒的 Events Broadcasting 特色，它能讓開發者建立一個 RealTime Web App 。作者 Taylor 也錄製了一個 Events Broadcasting 的教學影片，讓開發者可以更快瞭解這個新功能。 教學影片中雖然</description>
    </item>
    
    <item>
      <title>Laravel 5.1 正式釋出</title>
      <link>https://jaceju.net/laravel-5-1/</link>
      <pubDate>Wed, 10 Jun 2015 00:34:37 +0800</pubDate>
      
      <guid>https://jaceju.net/laravel-5-1/</guid>
      <description>經過了幾個月的等待， Laravel 5.1 終於在美國時間 6/9 正式釋出了。同時 Laracasts 也推出了一系列的 Laravel 5.1 新功能介紹，絕對是每位 Artisan 必看的影片。 官方也介紹了 5.1 有哪些新特色</description>
    </item>
    
    <item>
      <title>開發 Laravel 套件時的單元測試</title>
      <link>https://jaceju.net/unittest-in-laravel-package-development/</link>
      <pubDate>Thu, 12 Dec 2013 22:51:00 +0800</pubDate>
      
      <guid>https://jaceju.net/unittest-in-laravel-package-development/</guid>
      <description>在官方手上的有關開發 Laravel 4 套件的章節，內容其實寫得滿詳盡了。只是它缺少了有關單元測試的說明，以下我將介紹一些自己的做法和經驗。 前置作業 我們可以</description>
    </item>
    
  </channel>
</rss>