<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on 網站製作學習誌</title>
    <link>https://jaceju.net/tags/php/</link>
    <description>Recent content in PHP on 網站製作學習誌</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 02 Nov 2018 12:30:00 +0800</lastBuildDate>
    
	<atom:link href="https://jaceju.net/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>理解 composer.json 的 replace</title>
      <link>https://jaceju.net/composer-replace/</link>
      <pubDate>Fri, 02 Nov 2018 12:30:00 +0800</pubDate>
      
      <guid>https://jaceju.net/composer-replace/</guid>
      <description>通常你在 composer.json 裡很少會用到 replace 這個 schema 屬性 ，不過在以下情境它就很有用了。 例如你正在開發一個專案 (也就是在 composer.json 中的 type 為 project ) ，它相依 original/library 這個套件以及 other/package 這個套</description>
    </item>
    
    <item>
      <title>分析 PHP 程式碼品質</title>
      <link>https://jaceju.net/php-quality-analysis/</link>
      <pubDate>Wed, 11 Jan 2017 18:29:49 +0800</pubDate>
      
      <guid>https://jaceju.net/php-quality-analysis/</guid>
      <description>前兩天 Laravel 老爸 Taylor 分享了他對幾個知名的 framework 所做的程式碼品質分析，引起了社群很大的討論。 因此，我想藉機分享一下： 如何對 PHP 程式碼做分析。 分析出來的數值</description>
    </item>
    
    <item>
      <title>在 PHPUnit 中測試需要 closure 的函式</title>
      <link>https://jaceju.net/php-closure-testing/</link>
      <pubDate>Mon, 09 Nov 2015 19:11:39 +0800</pubDate>
      
      <guid>https://jaceju.net/php-closure-testing/</guid>
      <description>不知道你有沒有在開發 PHP 程式的過程中，測試過需要使用 anonymous function 或 closure 的函式或類別方法？我在開發自己的函式庫時，就遇到了需要測試 closure 是否被正確調用的問題。</description>
    </item>
    
    <item>
      <title>Laravel 5.1 Events Broadcasting 實務練習</title>
      <link>https://jaceju.net/laravel-events-broadcasting/</link>
      <pubDate>Sun, 26 Jul 2015 00:38:37 +0800</pubDate>
      
      <guid>https://jaceju.net/laravel-events-broadcasting/</guid>
      <description>Laravel 5.1 提供了一個非常棒的 Events Broadcasting 特色，它能讓開發者建立一個 RealTime Web App 。作者 Taylor 也錄製了一個 Events Broadcasting 的教學影片，讓開發者可以更快瞭解這個新功能。 教學影片中雖然</description>
    </item>
    
    <item>
      <title>Laravel 5.1 正式釋出</title>
      <link>https://jaceju.net/laravel-5-1/</link>
      <pubDate>Wed, 10 Jun 2015 00:34:37 +0800</pubDate>
      
      <guid>https://jaceju.net/laravel-5-1/</guid>
      <description>經過了幾個月的等待， Laravel 5.1 終於在美國時間 6/9 正式釋出了。同時 Laracasts 也推出了一系列的 Laravel 5.1 新功能介紹，絕對是每位 Artisan 必看的影片。 官方也介紹了 5.1 有哪些新特色</description>
    </item>
    
    <item>
      <title>理解 Dependency Injection 實作原理</title>
      <link>https://jaceju.net/php-di-container/</link>
      <pubDate>Sun, 27 Jul 2014 17:45:50 +0800</pubDate>
      
      <guid>https://jaceju.net/php-di-container/</guid>
      <description>現代較新的 Web Framework 都強調自己有 Dependency Injection (以下簡稱 DI ) 的特色，只是很多人對它的運作原理還是一知半解。 所以接下來我將用一個簡單的範例，來為各位介紹在 PHP 中</description>
    </item>
    
    <item>
      <title>整理一些常見的 PHP 錯誤</title>
      <link>https://jaceju.net/summary-of-common-php-mistakes/</link>
      <pubDate>Mon, 21 Jul 2014 10:51:03 +0800</pubDate>
      
      <guid>https://jaceju.net/summary-of-common-php-mistakes/</guid>
      <description>最近有數篇文章介紹了 PHP 開發者常見的錯誤，我順手整理如下： 10 Common PHP Coding Errors 在 foreach 迴圈中使用了迭代項目的參考。 誤用了 isset 。 搞混了回傳值是傳參考還是傳值。 在</description>
    </item>
    
    <item>
      <title>用 Imagick 建立 CSS Sprites</title>
      <link>https://jaceju.net/create-css-sprites-with-imagick/</link>
      <pubDate>Mon, 11 Jun 2012 12:01:00 +0800</pubDate>
      
      <guid>https://jaceju.net/create-css-sprites-with-imagick/</guid>
      <description>這是工作筆記，介紹如何用 Imagick 製作出 CSS Sprites 。 工具 這個功能需要在系統上安裝以下工具： ImageMagick ImageMagick 是一個圖形處理套件，請參考作系統版本安裝；以 Ubuntu 為例，安裝方法</description>
    </item>
    
    <item>
      <title>實戰 PHP 重構與模式</title>
      <link>https://jaceju.net/php-refactor-to-pattern-in-action/</link>
      <pubDate>Thu, 05 May 2011 00:00:00 +0800</pubDate>
      
      <guid>https://jaceju.net/php-refactor-to-pattern-in-action/</guid>
      <description>重構對一般開發者來說，實在是一件吃力不討好的事情，更別說想要把程式以模式來重構了。 在這次的讀書會報告裡，我首次挑戰這樣的題目，為大家介紹如何</description>
    </item>
    
    <item>
      <title>[PHP] 簡易的物件傳遞方法</title>
      <link>https://jaceju.net/passing-php-object/</link>
      <pubDate>Thu, 03 Feb 2011 00:00:00 +0800</pubDate>
      
      <guid>https://jaceju.net/passing-php-object/</guid>
      <description>在 PHP 中，傳遞物件是很容易的事；我們只需要將物件的狀態封裝起來後，以字串的方式傳遞給另一端的程式還原執行即可。物件的傳遞用途很多，例如我們在 Gearman</description>
    </item>
    
  </channel>
</rss>